<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>四川省自然保护区地理信息查询系统</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            height: 100%;
            width: 100%;
            background-color: #2c3e50;
            display: flex;
            flex-direction: column;
        }

        .main-content {
            display: flex;
            flex-grow: 1;
        }

        .sidebar {
            width: 200px;
            background-color: #34495e;
            color: white;
            padding: 20px;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            z-index: 100;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .menu-section {
            flex-grow: 1;
        }

        .menu-item {
            margin-bottom: 10px;
            position: relative;
        }

        .menu-btn {
            background-color: transparent;
            color: white;
            border: none;
            cursor: pointer;
            width: 100%;
            text-align: left;
            padding: 10px;
        }

        .submenu {
            display: none;
            background-color: #2c3e50;
            padding-left: 20px;
            margin-top: 5px;
            border-left: 2px solid #555;
        }

        .submenu a {
            color: white;
            text-decoration: none;
            display: block;
            padding: 5px 0;
        }

        .submenu a:hover {
            background-color: #555;
        }

        .menu-item:focus-within .submenu,
        .menu-item:hover .submenu {
            display: block;
        }

        .user-info {
            margin-bottom: 20px;
            text-align: center;
            color: white;
        }

        .user-info img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-bottom: 10px;
            cursor: pointer;
        }

        .logout-btn {
            margin-top: 20px;
            background-color: #e74c3c;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }

        .logout-btn:hover {
            background-color: #c0392b;
        }

        #avatar-input {
            display: none;
        }

        .map-container {
            flex-grow: 1;
            margin-left: 200px;
            height: 100%;
        }

        #container {
            width: 100%;
            height: 100%;
        }

        .map-controls {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .control-btn {
            background-color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 20px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .logo {
            width: 120px;
            height: auto;
            margin: 10px auto 0;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="main-content">
        <nav class="sidebar">
            <div class="menu-section">
                <header>
                    <img id="user-avatar" src="default-avatar.png" alt="用户头像" title="点击更换头像">
                    <input type="file" id="avatar-input" accept="image/*">
                    <div class="user-info">
                        <strong id="username">未登录</strong>
                    </div>
                    <button class="logout-btn" id="logoutButton">登出</button>
                </header>
                <div class="menu-item" tabindex="0">
                    <button class="menu-btn">首页 ▼</button>
                    <div class="submenu">
                        <a href="Register.html">注册</a>
                        <a href="Login.html">登录</a>
                    </div>
                </div>
                <div class="menu-item" tabindex="0">
                    <button class="menu-btn">后台用户管理 ▼</button>
                    <div class="submenu">
                        <a href="Admin.html">后台用户管理</a>
                        <a href="Changepassword.html">密码管理</a>
                    </div>
                </div>
                <div class="menu-item" tabindex="0">
                    <button class="menu-btn">自然保护区展示 ▼</button>
                    <div class="submenu">
                        <a href="Navigation.html">自然保护区展示</a>
                    </div>
                </div>
                <div class="menu-item" tabindex="0">
                    <button class="menu-btn">天气查询 ▼</button>
                    <div class="submenu">
                        <a href="Weather.html">自然保护区天气查询</a>
                    </div>
                </div>
            </div>
            <img class="logo" src="Add a subheading.png"  onclick="window.location.href='dt.html'">
        </nav>

        <main class="map-container">
            <div id="container"></div>
            <div class="map-controls">
                <button class="control-btn">+</button>
                <button class="control-btn">-</button>
            </div>
        </main>
    </div>

    <script src="https://api.map.baidu.com/api?v=3.0&ak=Chxx8mpsvDZrmvqrupmqbNBBmaGRXba2"></script>
    <script>
        const apiUrl = 'http://localhost:3000/api';

        // Load logged-in user data
        function loadUserData() {
            const user = JSON.parse(localStorage.getItem('loggedInUser'));
            if (user) {
                document.getElementById('username').textContent = user.username;
                document.getElementById('user-avatar').src = user.avatar || 'default-avatar.png';
            }
        }

        // Handle avatar upload and preview
        const avatarInput = document.getElementById('avatar-input');
        const userAvatar = document.getElementById('user-avatar');

        userAvatar.addEventListener('click', () => {
            avatarInput.click(); // Open file picker
        });

        avatarInput.addEventListener('change', async () => {
            const file = avatarInput.files[0];
            if (file) {
                // Preview the selected image
                const reader = new FileReader();
                reader.onload = (e) => {
                    userAvatar.src = e.target.result; // Set the image preview
                };
                reader.readAsDataURL(file);

                // Upload the file to the server
                const formData = new FormData();
                formData.append('avatar', file);

                try {
                    const user = JSON.parse(localStorage.getItem('loggedInUser'));
                    const response = await fetch(`${apiUrl}/users/${user.id}/avatar`, {
                        method: 'PUT',
                        body: formData,
                    });

                    if (response.ok) {
                        const updatedUser = await response.json();
                        localStorage.setItem('loggedInUser', JSON.stringify(updatedUser));
                        alert('头像已更新');
                    } else {
                        alert('头像更新失败');
                    }
                } catch (error) {
                    console.error('上传头像时出错:', error);
                }
            }
        });

        // Logout function
        const logoutButton = document.getElementById('logoutButton');
        logoutButton.addEventListener('click', () => {
            localStorage.removeItem('loggedInUser'); // Clear user data
            alert('已登出');
            window.location.href = 'Login.html'; // Redirect to login page
        });

        // Initialize the map and display user data
        window.onload = function () {
            loadUserData();

            var map = new BMap.Map('container');
            var areas = [
    { name: '九寨沟自然保护区', coordinates: [104.2425, 33.2583] },
    { name: '卧龙自然保护区', coordinates: [103.4937, 31.0516] },
    { name: '黄龙自然保护区', coordinates: [103.8281, 32.7544] },
    { name: '唐家河自然保护区', coordinates: [105.1719, 32.5766] },
    { name: '米仓山自然保护区', coordinates: [106.3336, 32.6469] },
    { name: '若尔盖湿地自然保护区', coordinates: [102.9632, 33.5754] },
    { name: '大熊猫栖息地自然保护区', coordinates: [103.0589, 30.7280] },
    { name: '贡嘎山自然保护区', coordinates: [101.9484, 29.5824] },
    { name: '木里雪山自然保护区', coordinates: [101.2806, 28.5456] },
    { name: '四川峨眉山自然保护区', coordinates: [103.3369, 29.5854] },
    { name: '凉山州安宁河流域自然保护区', coordinates: [102.2586, 27.8574] },
    { name: '九龙山自然保护区', coordinates: [101.7342, 28.9708] },
    { name: '四姑娘山自然保护区', coordinates: [102.9036, 31.0798] },
    { name: '青城山-都江堰自然保护区', coordinates: [103.6102, 30.8946] },
    { name: '康定木格措自然保护区', coordinates: [101.9648, 30.0915] },
    { name: '黑竹沟自然保护区', coordinates: [102.8488, 28.3350] },
    { name: '峨边彝族自治县自然保护区', coordinates: [103.0962, 29.1753] },
    { name: '凉山彝族自治州湿地自然保护区', coordinates: [102.2654, 28.0592] },
    { name: '甘孜州理塘草原自然保护区', coordinates: [100.2687, 30.0500] },
    { name: '川西高原自然保护区', coordinates: [101.7675, 32.0845] },
    { name: '雅安雨城自然保护区', coordinates: [103.0375, 29.9806] },
    { name: '金阳彝族自治县自然保护区', coordinates: [103.2426, 27.7032] },
    { name: '攀枝花大黑山自然保护区', coordinates: [101.7005, 26.5856] },
    { name: '泸定磨西自然保护区', coordinates: [102.0914, 29.5677] }
];


            // Set map center and zoom
            var points = areas.map(area => new BMap.Point(area.coordinates[0], area.coordinates[1]));
            map.centerAndZoom(new BMap.Point(104.0668, 30.5720), 10);
            map.enableScrollWheelZoom(true);
            map.setViewport(points);

            // Add markers
            areas.forEach(area => {
                var point = new BMap.Point(area.coordinates[0], area.coordinates[1]);
                var marker = new BMap.Marker(point);
                map.addOverlay(marker);
                marker.addEventListener('click', function () {
                    var infoWindow = new BMap.InfoWindow(`<b>${area.name}</b>`);
                    map.openInfoWindow(infoWindow, point);
                });
            });

            // Map controls
            document.querySelectorAll('.control-btn').forEach(button => {
                button.addEventListener('click', function () {
                    if (this.textContent === '+') {
                        map.zoomIn();
                    } else if (this.textContent === '-') {
                        map.zoomOut();
                    }
                });
            });
        };
    </script>
</body>
</html>
